Resources:

  loadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: security group for the load balancer
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80


  loadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets:
        - subnet-36609151
        - subnet-70120614
      SecurityGroups:
        - !Ref ${loadBalancerSecurityGroup.GroupId}
      Listeners:
        -
          InstancePort: 80
          LoadBalancerPort: 80
          Protocol: HTTP


  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: security group for webserver
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          SourceSecurityGroupId: !Sub ${loadBalancerSecurityGroup.GroupId}
          FromPort: 80
          ToPort: 80

  autoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref launchConfiguration
      MaxSize: 2
      MinSize: 1
      VPCZoneIdentifier:
        - subnet-36609151
        - subnet-70120614

  launchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []

          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true

    Properties:
       ImageId: ami-64260718
       InstanceType: m4.large
       SecurityGroups:
         - !Sub ${securityGroup.GroupId}
       UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r launchConfiguration --region ${AWS::Region} -v
